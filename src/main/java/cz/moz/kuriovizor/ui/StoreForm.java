/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cz.moz.kuriovizor.ui;

import cz.moz.kuriovizor.daos.StorageEntitiesDao;
import cz.moz.kuriovizor.domain.StoreEntity;
import cz.moz.kuriovizor.ui.sub.StoreViewTableModel;
import java.util.List;
import org.springframework.beans.BeansException;
import org.springframework.context.ApplicationContext;
import org.springframework.context.ApplicationContextAware;
import org.springframework.context.support.ClassPathXmlApplicationContext;

/**
 *
 * @author moz
 */
public class StoreForm extends javax.swing.JDialog implements ApplicationContextAware {

    private ApplicationContext context;
    private StoreViewTableModel storageTableModel;

    private StorageEntitiesDao storeDao;
    private List<StoreEntity> list;

    /**
     * Creates new form StoreForm
     */
    public StoreForm(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    public void initData(StorageEntitiesDao dao) {
        this.storeDao = dao;
        this.list = this.storeDao.getAllEntities();
        storageTableModel = new StoreViewTableModel(this.list);
        viewStore.setModel(storageTableModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        viewStore = new javax.swing.JTable();
        btnShowDetail = new javax.swing.JButton();
        btnNewEntity = new javax.swing.JButton();
        btnDeleteEntity = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        viewStore.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Id", "Name", "Count", "MinCount", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Float.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        viewStore.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                viewStoreMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(viewStore);
        if (viewStore.getColumnModel().getColumnCount() > 0) {
            viewStore.getColumnModel().getColumn(0).setResizable(false);
            viewStore.getColumnModel().getColumn(0).setPreferredWidth(10);
        }

        btnShowDetail.setText("Show detail...");
        btnShowDetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowDetailActionPerformed(evt);
            }
        });

        btnNewEntity.setText("New entity...");
        btnNewEntity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewEntityActionPerformed(evt);
            }
        });

        btnDeleteEntity.setText("Delete entity");
        btnDeleteEntity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteEntityActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 663, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnNewEntity)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnShowDetail)
                        .addGap(18, 18, 18)
                        .addComponent(btnDeleteEntity)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnShowDetail)
                    .addComponent(btnNewEntity)
                    .addComponent(btnDeleteEntity))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void viewStoreMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewStoreMouseClicked
//        StoreEntity entity = this.list.get(viewStore.convertRowIndexToModel(viewStore.getSelectedRow()));
//        txtId.setValue(entity.getId());
//        txtName.setValue(entity.getProductName());
//        txtCompany.setValue(entity.getCompany());
//        txtCount.setValue(entity.getCount());
//        txtMinCount.setValue(entity.getMinCount());
//        System.out.println(entity.getProductName());
    }//GEN-LAST:event_viewStoreMouseClicked

    private void btnShowDetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowDetailActionPerformed
        int index = viewStore.convertRowIndexToModel(viewStore.getSelectedRow());
        if (index == - 1) {
            System.out.println("Nebyl vybran zadny prvek.");
        } else {
            StoreEntity entity = this.list.get(index);
            StoreEntityDialog detail = new StoreEntityDialog(this);
            detail.setStoreEntity(entity);
            detail.setAction(StoreEntityDialog.Action.UPDATE);
            detail.setStorageEntitiesDao(storeDao);
            detail.initData();
            detail.setVisible(true);
        }
    }//GEN-LAST:event_btnShowDetailActionPerformed

    private void btnNewEntityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewEntityActionPerformed
        StoreEntityDialog dialog = new StoreEntityDialog(this);
        dialog.setModal(true);
        dialog.setAction(StoreEntityDialog.Action.CREATE);
        dialog.setStorageEntitiesDao(storeDao);
        dialog.initData();
        dialog.setVisible(true);
        
        this.list.add(dialog.getStoreEntity());
        this.storageTableModel = new StoreViewTableModel(this.list);
        this.viewStore.setModel(this.storageTableModel);
    }//GEN-LAST:event_btnNewEntityActionPerformed

    private void btnDeleteEntityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteEntityActionPerformed
        if (viewStore.getSelectedRow() > 0) {
            int possition = viewStore.getSelectedRow();
            int posIndex = viewStore.convertRowIndexToModel(possition);
            StoreEntity entity = this.list.get(posIndex);
            
            this.storeDao.deleteEntity(entity.getId());
            this.list.remove(entity);
            
            StoreViewTableModel newModel = new StoreViewTableModel(this.list);
            viewStore.setModel(newModel);
        }
    }//GEN-LAST:event_btnDeleteEntityActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StoreForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StoreForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StoreForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StoreForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ApplicationContext con = new ClassPathXmlApplicationContext("spring/application-context.xml");
                StorageEntitiesDao dao = con.getBean(StorageEntitiesDao.class);

                StoreForm dialog = new StoreForm(new javax.swing.JFrame(), true);
                dialog.initData(dao);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDeleteEntity;
    private javax.swing.JButton btnNewEntity;
    private javax.swing.JButton btnShowDetail;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable viewStore;
    // End of variables declaration//GEN-END:variables

    @Override
    public void setApplicationContext(ApplicationContext ac) throws BeansException {
        this.context = ac;
    }
}
